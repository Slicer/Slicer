<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>qMRMLMarkupsFiducialProjectionPropertyWidget</class>
 <widget class="QWidget" name="qMRMLMarkupsFiducialProjectionPropertyWidget">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>280</width>
    <height>102</height>
   </rect>
  </property>
  <property name="sizePolicy">
   <sizepolicy hsizetype="Preferred" vsizetype="Maximum">
    <horstretch>0</horstretch>
    <verstretch>0</verstretch>
   </sizepolicy>
  </property>
  <property name="windowTitle">
   <string>qMRMLMarkupsFiducialProjectionPropertyWidget</string>
  </property>
  <layout class="QFormLayout" name="formLayout">
   <property name="labelAlignment">
    <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>
   </property>
   <property name="formAlignment">
    <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>
   </property>
   <property name="topMargin">
    <number>0</number>
   </property>
   <property name="rightMargin">
    <number>5</number>
   </property>
   <property name="bottomMargin">
    <number>0</number>
   </property>
   <item row="1" column="0">
    <widget class="QLabel" name="point2DProjectionLabel">
     <property name="toolTip">
      <string>If enabled then all control points will be displayed in 2D viewers, by projecting them to the slice plane.</string>
     </property>
     <property name="text">
      <string>Projection Visibility:</string>
     </property>
    </widget>
   </item>
   <item row="3" column="0">
    <widget class="QLabel" name="pointProjectionColorLabel">
     <property name="toolTip">
      <string>Color of the projected control points on 2D viewers</string>
     </property>
     <property name="text">
      <string>Projection Color:</string>
     </property>
    </widget>
   </item>
   <item row="3" column="1">
    <widget class="ctkColorPickerButton" name="pointProjectionColorPickerButton">
     <property name="minimumSize">
      <size>
       <width>0</width>
       <height>0</height>
      </size>
     </property>
     <property name="toolTip">
      <string>Color of the projected control points on 2D viewers. Only used if "Use Markup Color" is not checked, otherwise the projection uses the selected or unselected markup color.</string>
     </property>
     <property name="color">
      <color>
       <red>255</red>
       <green>255</green>
       <blue>255</blue>
      </color>
     </property>
     <property name="displayColorName">
      <bool>false</bool>
     </property>
     <property name="dialogOptions">
      <set>ctkColorPickerButton::UseCTKColorDialog</set>
     </property>
    </widget>
   </item>
   <item row="5" column="0">
    <widget class="QLabel" name="pointOutlinedBehindSlicePlaneLabel">
     <property name="toolTip">
      <string>Projected control points are displayed filled (opacity = Projection Opacity) when above the slice plane, outlined when behind, and with full opacity when in the plane. Outline isn't used for some glyphs (Dash2D, Cross2D, Starburst).</string>
     </property>
     <property name="text">
      <string>Outlined Behind Slice Plane:</string>
     </property>
    </widget>
   </item>
   <item row="5" column="1">
    <widget class="QCheckBox" name="pointOutlinedBehindSlicePlaneCheckBox">
     <property name="toolTip">
      <string>Projected control points are displayed filled (opacity = Projection Opacity) when above the slice plane, outlined when behind, and with full opacity when in the plane. Outline isn't used for some glyphs (Dash2D, Cross2D, Starburst).</string>
     </property>
     <property name="text">
      <string/>
     </property>
     <property name="checked">
      <bool>true</bool>
     </property>
    </widget>
   </item>
   <item row="2" column="0">
    <widget class="QLabel" name="pointUseFiducialColorLabel">
     <property name="toolTip">
      <string>Use the same color as the markup</string>
     </property>
     <property name="text">
      <string>Use Markup Color:</string>
     </property>
    </widget>
   </item>
   <item row="2" column="1">
    <widget class="QCheckBox" name="pointUseFiducialColorCheckBox">
     <property name="toolTip">
      <string>Use the same color as the markup</string>
     </property>
     <property name="text">
      <string/>
     </property>
     <property name="checked">
      <bool>true</bool>
     </property>
    </widget>
   </item>
   <item row="1" column="1">
    <layout class="QHBoxLayout" name="horizontalLayout">
     <item>
      <widget class="ctkCheckBox" name="point2DProjectionCheckBox">
       <property name="toolTip">
        <string>If enabled then all control points will be displayed in 2D viewers, by projecting them to the slice plane.</string>
       </property>
       <property name="indicatorIconSize">
        <size>
         <width>23</width>
         <height>23</height>
        </size>
       </property>
      </widget>
     </item>
     <item>
      <widget class="QLabel" name="projectionOpacityLabel">
       <property name="text">
        <string>Opacity:</string>
       </property>
      </widget>
     </item>
     <item>
      <widget class="ctkSliderWidget" name="projectionOpacitySliderWidget">
       <property name="toolTip">
        <string>The opacity of the projection.</string>
       </property>
       <property name="singleStep">
        <double>0.100000000000000</double>
       </property>
       <property name="maximum">
        <double>1.000000000000000</double>
       </property>
       <property name="value">
        <double>0.600000000000000</double>
       </property>
      </widget>
     </item>
    </layout>
   </item>
  </layout>
 </widget>
 <customwidgets>
  <customwidget>
   <class>ctkCheckBox</class>
   <extends>QCheckBox</extends>
   <header>ctkCheckBox.h</header>
  </customwidget>
  <customwidget>
   <class>ctkColorPickerButton</class>
   <extends>QPushButton</extends>
   <header>ctkColorPickerButton.h</header>
  </customwidget>
  <customwidget>
   <class>ctkSliderWidget</class>
   <extends>QWidget</extends>
   <header>ctkSliderWidget.h</header>
  </customwidget>
 </customwidgets>
 <resources>
  <include location="../../../../../../Base/QTGUI/Resources/qSlicerBaseQTGUI.qrc"/>
 </resources>
 <connections/>
</ui>
